@model MediaOrganiser1.Models.FileClass

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(null, null, System.Web.Mvc.FormMethod.Post, new { enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>FileClass</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @*Label for File Upload.*@ 
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @*File input.*@
            <input type="file" id="upload" name="upload" />

            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Label("Music")
            @Html.RadioButtonFor(m => m.Category, "Audio", htmlAttributes: new { @class = "radiobutton1", @id = "radiobutton1"})
            @Html.Label("Photo")
            @Html.RadioButtonFor(m => m.Category, "Photo", htmlAttributes: new { @class = "radiobutton2", @id = "radiobutton2" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    @*@if (Model.Category == "Video")
                {

                }*@

    <div class="form-group">
        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownList("Genre", new List<SelectListItem>()
            {
                new SelectListItem(){ Text= "Relaxing", Value = "Happy"},
                 new SelectListItem(){ Text= "Upbeat", Value = "Relaxing"},
                 new SelectListItem(){ Text= "Motivational", Value = "Action"},
                 new SelectListItem(){ Text= "Emotional", Value = "Upbeat"},
                 new SelectListItem(){ Text= "Action", Value = "Upbeat"},
            }, "Select Genre")
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@*<script>
    document.getElementById("radiobutton1").onchange = function () {
    document.getElementById("two").setAttribute("disabled", "disabled");

        if (this.value == 'Audio')
            document.getElementById("Genre").removeAttribute("disabled");
    };
</script>*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
