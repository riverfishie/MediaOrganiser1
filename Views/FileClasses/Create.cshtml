@model MediaOrganiser1.Models.FileClass

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(null, null, System.Web.Mvc.FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Upload Media</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @*Label for File Upload.*@
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @*File input.*@
                <input type="file" id="upload" name="upload" />

                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label("Music")
                @Html.RadioButtonFor(m => m.Category, "Audio", htmlAttributes: new { @class = "radiobutton1", @id = "radiobutton1" })
                @Html.Label("Photo")
                @Html.RadioButtonFor(m => m.Category, "Photo", htmlAttributes: new { @class = "radiobutton2", @id = "radiobutton2" })
                @Html.Label("Video")
                @Html.RadioButtonFor(m => m.Category, "Video", htmlAttributes: new {@class = "radiobutton3", @id = "radiobutton3" })

                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        @*   old    @if (Model.Category == "Video")
            {

            }*@

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Genre", new List<SelectListItem>()
                {
                    new SelectListItem(){ Text= "Relaxing", Value = "Relaxing"},
                     new SelectListItem(){ Text= "Upbeat", Value = "Upbeat"},
                     new SelectListItem(){ Text= "Motivational", Value = "Motivational"},
                     new SelectListItem(){ Text= "Emotional", Value = "Emotional"},
                     new SelectListItem(){ Text= "Action", Value = "Action"},
                }, "Select Genre")
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<script>

    old code
        document.getElementById("radiobutton1").onchange = function () {
        document.getElementById("two").setAttribute("disabled", "disabled");

            if (this.value == 'Audio')
                document.getElementById("Genre").removeAttribute("disabled");
        };
    </script>*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var selectedIndex = 0;

        $('input:radio').click(function ()
        {
            if ($(this).val() === "Photo")
            { // Disables Genre dropdown if upload is a photo
                $('#Genre').prop('disabled', true);
                selectedIndex = $("#Genre").selectedIndex
                $('#Genre').prop('selectedIndex', 0);
            }
            else if ($(this).val() === "Video")
            { // Disables Genre dropdown if upload is a video
                $('#Genre').prop('disabled', true);
                selectedIndex = $("#Genre").selectedIndex
                $('#Genre').prop('selectedIndex', 0);
            }
            else
            { //Enables dropdown / removes disabled property
                $('#Genre').prop('disabled', false);
                $('#Genre').prop('selectedIndex', selectedIndex);
            }
        });
    </script>
}

